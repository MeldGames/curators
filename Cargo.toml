[package]
name = "arch"
version = "0.1.0"
edition = "2024"

[workspace]
resolver = "3"
members = [
  "crates/*",
]

[features]
default = []
trace = [ "arch_core/trace", "bevy/trace_tracy"]

[dependencies]
# Internal
arch_core = { path = "crates/arch_core" }

# Bevy
bevy = { version = "0.16.1", default-features = false, features = [
    "experimental_pbr_pcss",

    # default features
    "std",
    "async_executor",
    "android-game-activity",
    "android_shared_stdcxx",
    "animation",
    "bevy_asset",
    "bevy_audio",
    "bevy_color",
    "bevy_core_pipeline",
    #   "bevy_core_widgets",
    #   "bevy_anti_aliasing",
    "bevy_gilrs",
    "bevy_gizmos",
    "bevy_gltf",
    "bevy_input_focus",
    "bevy_log",
    "bevy_mesh_picking_backend",
    "bevy_pbr",
    "bevy_picking",
    "bevy_render",
    "bevy_scene",
    #   "bevy_scene2",
    "bevy_sprite",
    "bevy_sprite_picking_backend",
    "bevy_state",
    "bevy_text",
    "bevy_ui",
    "bevy_ui_picking_backend",
    #   "bevy_ui_render",
    "bevy_window",
    "bevy_winit",
    "custom_cursor",
    "default_font",
    "hdr",
    "multi_threaded",
    "png",
    "smaa_luts",
    "sysinfo_plugin",
    "tonemapping_luts",
    "vorbis",
    "webgl2",
    "x11",
    #   "debug",
    #   "zstd_rust",
    #   "experimental_bevy_feathers",
] }

bevy_math = { version = "0.16.1", features = ["approx"] }

# Debug
iyes_perf_ui = "0.5.0"
#iyes_perf_ui = { git = "https://github.com/olekspickle/iyes_perf_ui", branch = "main" }
bevy-inspector-egui = "0.32.0"
# tracy-client = { version = "0.17.3", optional = true }

[dev-dependencies]
bench = { path = "crates/bench" }
criterion = { version = "0.6.0", features = ["html_reports"] }
#pprof = { version = "0.15.0", features = ["flamegraph", "criterion"] }

[patch.crates-io]
#bevy_enhanced_input = { git = "https://github.com/projectharmonia/bevy_enhanced_input", rev = "21ddc08755" }
fast-surface-nets = { path = "../fast-surface-nets-rs" }

# bevy patches
# bevy = { path = "../bevy" }
# bevy_a11y = { path = "../bevy/crates/bevy_a11y" }
# bevy_animation = { path = "../bevy/crates/bevy_animation" }
# bevy_app = { path = "../bevy/crates/bevy_app" }
# bevy_asset = { path = "../bevy/crates/bevy_asset" }
# bevy_audio = { path = "../bevy/crates/bevy_audio" }
# bevy_color = { path = "../bevy/crates/bevy_color" }
# bevy_core_pipeline = { path = "../bevy/crates/bevy_core_pipeline" }
# bevy_derive = { path = "../bevy/crates/bevy_derive" }
# bevy_dev_tools = { path = "../bevy/crates/bevy_dev_tools" }
# bevy_diagnostic = { path = "../bevy/crates/bevy_diagnostic" }
# bevy_dylib = { path = "../bevy/crates/bevy_dylib" }
# bevy_ecs = { path = "../bevy/crates/bevy_ecs" }
# bevy_encase_derive = { path = "../bevy/crates/bevy_encase_derive" }
# bevy_gilrs = { path = "../bevy/crates/bevy_gilrs" }
# bevy_gizmos = { path = "../bevy/crates/bevy_gizmos" }
# bevy_gltf = { path = "../bevy/crates/bevy_gltf" }
# bevy_image = { path = "../bevy/crates/bevy_image" }
# bevy_input = { path = "../bevy/crates/bevy_input" }
# bevy_input_focus = { path = "../bevy/crates/bevy_input_focus" }
# bevy_internal = { path = "../bevy/crates/bevy_internal" }
# bevy_log = { path = "../bevy/crates/bevy_log" }
# bevy_macro_utils = { path = "../bevy/crates/bevy_macro_utils" }
# bevy_math = { path = "../bevy/crates/bevy_math" }
# bevy_mesh = { path = "../bevy/crates/bevy_mesh" }
# bevy_mikktspace = { path = "../bevy/crates/bevy_mikktspace" }
# bevy_pbr = { path = "../bevy/crates/bevy_pbr" }
# bevy_picking = { path = "../bevy/crates/bevy_picking" }
# bevy_platform = { path = "../bevy/crates/bevy_platform" }
# bevy_ptr = { path = "../bevy/crates/bevy_ptr" }
# bevy_reflect = { path = "../bevy/crates/bevy_reflect" }
# bevy_remote = { path = "../bevy/crates/bevy_remote" }
# bevy_render = { path = "../bevy/crates/bevy_render" }
# bevy_scene = { path = "../bevy/crates/bevy_scene" }
# bevy_sprite = { path = "../bevy/crates/bevy_sprite" }
# bevy_state = { path = "../bevy/crates/bevy_state" }
# bevy_tasks = { path = "../bevy/crates/bevy_tasks" }
# bevy_text = { path = "../bevy/crates/bevy_text" }
# bevy_time = { path = "../bevy/crates/bevy_time" }
# bevy_transform = { path = "../bevy/crates/bevy_transform" }
# bevy_ui = { path = "../bevy/crates/bevy_ui" }
# bevy_utils = { path = "../bevy/crates/bevy_utils" }
# bevy_window = { path = "../bevy/crates/bevy_window" }
# bevy_winit = { path = "../bevy/crates/bevy_winit" }

[profile.release]
debug = true

# Enable a small amount of optimization in the dev profile.
[profile.dev]
opt-level = 1

# Enable a large amount of optimization in the dev profile for dependencies.
[profile.dev.package."*"]
opt-level = 3

# Remove expensive debug assertions due to <https://github.com/bevyengine/bevy/issues/14291>
[profile.dev.package.wgpu-types]
debug-assertions = false

# Idiomatic Bevy code often triggers these lints, and the CI workflow treats them as errors.
# In some cases they may still signal poor code quality however, so consider commenting out these lines.
[lints.clippy]
# Bevy supplies arguments to systems via dependency injection, so it's natural for systems to
# request more than 7 arguments -- which triggers this lint.
too_many_arguments = "allow"
# Queries that access many components may trigger this lint.
type_complexity = "allow"

[[bench]]
name = "voxels"
harness = false

[[bench]]
name = "falling_sands"
harness = false

[[bench]]
name = "mesh"
harness = false

[[example]]
name = "sdf_viewer"
path = "examples/sdf_viewer.rs"

[[example]]
name = "sim_bench_viewer"
path = "examples/sim_bench_viewer.rs"

[[example]]
name = "mesh_bench_viewer"
path = "examples/mesh_bench_viewer.rs"
